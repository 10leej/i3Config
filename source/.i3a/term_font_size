#!/usr/bin/env bash

#----------------------------------------------------------------------------------
# Project Name      - i3Config/source/.i3a/term_font_size
# Started On        - Mon 30 Oct 15:14:16 GMT 2017
# Last Change       - Fri 22 Nov 22:28:08 GMT 2019
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# Raise or lower the xfce4-terminal font size. Due to the nature of the way in
# which this terminal checks for and processes the changes to its configuration
# file, this approach is sluggish to respond, but still works nicely, for those
# running an older version which doesn't support font size changes via shortcuts.
#
# SYNTAX:     term_font_size [OPT]
#
# OPTS:       --help|-h|-?            - Displays this help information.
#             --version|-v            - Output only the version datestamp.
#             --raise|-r N            - Raise the font size by N.
#             --lower|-r N            - lower the font size by N.
#             --set|-s N              - Just set the font size to N.
#----------------------------------------------------------------------------------

_VERSION_="2019-11-22"

if type -fP sed > /dev/null 2>&1; then
	SOUND="$HOME/.config/i3/Sounds/SND03.wav"
	FILE="$HOME/.config/xfce4/terminal/terminalrc"
	if ! [ -f "$FILE" ]; then
		printf "ERROR: The configuration file is missing.\n" >&2
		exit 1
	else
		while IFS="=" read -a X; do
			if [ "${X[0]}" == FontName ]; then
				printf -v NOW "%d" "${X[1]//[!0-9]/}"
			fi
		done < "$FILE"

		PLAYSND(){
			if type -fP pactl > /dev/null 2>&1; then
				paplay --volume 40000 "$1"
			else
				printf "ERROR: Dependency 'paplay' not met.\n" >&2
			fi
		}

		CHKVAL(){
			if ! [[ "$1" =~ ^[0-9]+$ ]]; then
				printf "ERROR: Invalid expression.\n" >&2
				exit 1
			fi
		}

		while [ "$1" ]; do
			case "$1" in
				--version|-v)
					printf "%s\n" "$_VERSION_"; exit 0 ;;
				--raise|-r)
					shift; CHKVAL "$1"
					declare -i RAISE=$1 ;;
				--lower|-l)
					shift; CHKVAL "$1"
					declare -i LOWER=$1 ;;
				--set|-s)
					shift; CHKVAL "$1"
					declare -i SETTO=$1 ;;
				*)
					printf "ERROR: Incorrect argument(s) specified.\n"
					exit 1 ;;
			esac
			shift
		done

		if [ "$RAISE" ]; then
			sed -i "/^FontName=/s/${NOW}$/$((NOW+RAISE))/"\
				"$FILE" && PLAYSND "$SOUND"
		elif [ "$LOWER" ]; then
			sed -i "/^FontName=/s/${NOW}$/$((NOW-LOWER))/"\
				"$FILE" && PLAYSND "$SOUND"
		elif [ "$SETTO" ]; then
			if sed -i "/^FontName=/s/${NOW}$/$SETTO/" "$FILE"; then
				PLAYSND "$SOUND"
			fi
		fi
	fi
else
	printf "ERROR: Dependency 'sed' not met.\n" >&2
	exit 1
fi

