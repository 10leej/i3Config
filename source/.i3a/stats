#!/usr/bin/env bash

#------------------------------------------------------------------------------
# Project Name      - $HOME/.libi3bview
# Started On        - Wed  8 Mar 18:41:22 GMT 2017
# Last Change       - Sat 20 Feb 20:23:55 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# This file was originally '.libi3bview' from way back in the day; about a year
# ago, according to the Git log. I'm reviving and revising it.
#-----------------------------------------------------------------YOUR SETTINGS

# Your YouTube 'about' page URL goes here.
YT_URL='https://youtube.com/c/LearnLinux/about'

# Your GitHub URL goes here.
GH_URL='https://github.com/terminalforlife'

# Your GitHub base directory, for all your GitHub projects.
GHDIR="$HOME/GitHub/terminalforlife/Personal"

# The match for the way in which you mark TODOs in a file.
GHDM='([#"]|//)TODO - '

# Ignore this many TODOs, which aren't technically TODOs.
declare -i GHDMO=1

# Spaces to pad for the YouTube subscriber count.
declare -i YT_PAD=3

# What is your network interface name?
IFACE='enp3s0'

# SYSFS interface to download/upload session info.
NetDLULDir="/sys/class/net/$IFACE/statistics"

# How many cores does your CPU have?
declare -i CORES=4

# What is the name of your root file system?
ROOT_DEV='/dev/sda1'

# Spaces to pad the root's disk usage.
declare -i ROOT_DEV_PAD=7

# Path to CPU (package) temperature via SYSFS.
CPUPATH='/sys/class/hwmon/hwmon1/temp1_input'

# Path to GPU (core) temperature via SYSFS.
GPUPATH='/sys/class/hwmon/hwmon2/temp1_input'

# What is the name of your home file system?*1
HOME_DEV="/dev/sdb1"

# Spaces to pad the home's disk usage.
HOME_DEV_PAD=7

# What is the target of your countdown?
CD_TARGET='2022-12-25'

# Spaces to pad for the in-seconds countdown.
declare -i CD_PAD=10

# Which one terminal do you use? (file name)
TERMINAL="xfce4-terminal"

# The padding used by the kernel version output. Latest stable & current.
KernPadding=9

#------------------------------------------------------YOUTUBE SUBSCRIBER COUNT

ytsubcount(){
	while IFS=':' read -a Line; do
		if [[ ${Line[*]} == *'{"simpleText"'* ]]; then
			for Field in "${Line[@]}"; {
				if [[ "$Field" == *subscribers* ]]; then
					StripLeft=${Field#*\"}
					printf '%-5s' "${StripLeft%%\ *}"

					break 2
				fi
			}
		fi
	done <<< "$(wget -qO - "$YT_URL")"
}

#------------------------------------------------------YOUTUBE TOTAL VIEW COUNT

#TODO - Sometimes this vanishes from the bar. Why?

ytviewcount(){
	MATCH='<span class="about-stat"> &bull; <b>[0-9,]+</b> views</span>'
	while read -a X; do
		if [[ "${X[@]}" =~ $MATCH ]]; then
			printf "%'6d" "${X[3]//[!0-9]}"
			break
		fi
	done <<< "$(wget -qO - "$YT_URL")"
}

#----------------------------------------------------COUNT OF PROCESSES (ps -a)

psa_count(){
	read -a PIDS <<< `/bin/ps --user ichy -ax -o pid=`
	printf "%'3d\n" "${#PIDS[@]}"
}

#-------------------------------------------------------MOCP CURRENT TRACK INFO

mocp_info(){
	STATUS=`mocp -i || printf "N/A"`
	case "${STATUS/* }" in
		STOP)
			printf "00:00/00:00" ;;
		N/A)
			printf "??:??/??:??" ;;
		*)
			mocp -Q %ct/%tt ;;
	esac
}

#--------------------------------------------------------------OPEN FILES COUNT

open_files_count(){
	readarray X <<< "$(lsof -t -u $UID 2> /dev/null)"
	printf "%3d" "${#X[@]}"
}

#--------------------------------------------------------------------USER COUNT

user_count(){
	declare -i D=0
	if type -P users &> /dev/null; then
		read -a X <<< "$(users)"
		printf "%2d" "${#X[@]}"
	elif type -P uptime &> /dev/null; then
		while read -a X; do
			if [[ "${X[3]}" =~ [0-9]+ ]]; then
				printf "%s\n" "${X[3]}"
				break
			fi
		done <<< "$(uptime)"
	else
		printf "!"
	fi
}

#----------------------------------------------------STORAGE DEVICE MOUNT COUNT

mount_count(){
	declare -i C=0
	while read -a X; do
		[[ "${X[0]}" == /dev/* ]] && C+=1
	done < /proc/mounts

	printf "%2d" "$C"
}

#--------------------------------------------------------KERNEL VERSION DISPLAY

kernel_check(){
	# Needs version '2020-12-14' or later of GLKFU.
	local Version=`glkfu -o current`
	local Dots=${Version//[!.]/}

	if [ ${#Dots} -gt 1 ]; then
		printf "%*s " $KernPadding  "v$Version"
	else
		printf "%*s " "$KernPadding"  "v$Version.0"
	fi
}

#-----------------------------------------------------CPU FREQUENCY (QUAD-CORE)

cpu_freq(){
	#TODO - Sometimes incorrect values are displayed. (still!)
	declare -a B=()
	for FILE in /sys/devices/system/cpu/cpufreq/policy*/scaling_cur_freq; {
		read V < "$FILE" && B+=($V)
	}

	declare -i A=0
	for FREQ in ${B[@]}; { A+=$FREQ; }
	printf "%4.4sMHz\n" "$((A/CORES))"
}

#----------------------------------------------------------------RAM USED IN MB

ram_used_mb(){
	while read -a X; do
		if [ "${X[0]}" == "Mem:" ]; then
			printf "%'6dM\n" "${X[2]}"
			break
		fi
	done <<< "$(free -m)"
}

#------------------------------------------------------USED SPACE IN HOME IN MB

home_space_used_mb(){
	while read -a X; do
		if [ "${X[0]}" == "$HOME_DEV" ]; then
			printf "%'${HOME_DEV_PAD}dM\n" "${X[2]}"
			break
		fi
	done <<< "$(df -m --no-sync)"
}

#------------------------------------------------------USED SPACE IN ROOT IN MB

root_space_used_mb(){
	while read -a X; do
		if [ "${X[0]}" == "$ROOT_DEV" ]; then
			printf "%'${ROOT_DEV_PAD}dM\n" "${X[2]}"
			break
		fi
	done <<< "$(df -m --no-sync)"
}

#--------------------------------------------------------SESSION DOWNLOAD TOTAL

session_dl_total(){
	while read -a X; do
		if [ "${X[0]}" == "$IFACE:" ]; then
			printf "%'6dM" "$((${X[1]}/1024/1024))"
			break
		fi
	done < /proc/net/dev
}

#----------------------------------------------------------SESSION UPLOAD TOTAL

session_ul_total(){
	while read -a X; do
		if [ "${X[0]}" == "$IFACE:" ]; then
			printf "%'6dM" "$((${X[9]}/1024/1024))"
			break
		fi
	done < /proc/net/dev
}

#-----------------------------------------------SESSION UPLOAD & DOWNLOAD TOTAL

session_ul_dl_total(){
	read TX < "$NetDLULDir/tx_bytes"
	read RX < "$NetDLULDir/rx_bytes"
	TX=$((TX / 1024 / 1024))
	RX=$((RX / 1024 / 1024))
	printf "%'6dM %'6dM" $RX $TX
}

#--------------------------------------------------------------ACTIVE TCP COUNT

estab_tcp_count(){
	readarray X <<< "$(ss --tcp -n)"
	printf "%3d" "$((${#X[@]}-1))"
}

#-----------------------------------------------------------LISTENING TCP COUNT

listening_tcp_count(){
	readarray X <<< "$(ss --tcp -l -n)"
	printf "%3d" "$((${#X[@]}-1))"
}

#--------------------------------------------------LISTENING & ACTIVE TCP COUNT

listening_estab_tcp_count(){
	readarray X <<< "$(ss --tcp -n)"
	printf "%3d " "$((${#X[@]}-1))"

	#TODO - Combine these so as to avoid opening 2 processes.

	readarray X <<< "$(ss --tcp -l -n)"
	printf "%3d " "$((${#X[@]}-1))"
}

#---------------------------------------------------------------CPU TEMPERATURE

cpu_temp(){
	read < "$CPUPATH"
	printf "%3d°C" "${REPLY%[0-9][0-9][0-9]}"
}

#---------------------------------------------------------------GPU TEMPERATURE

gpu_temp(){
	read < "$GPUPATH"
	printf "%3d°C" "${REPLY%[0-9][0-9][0-9]}"
}

#---------------------------------------------------------------------SHOW DATE

date_show(){
	printf "%(%d/%m/%Y)T"
}

#---------------------------------------------------------------------SHOW TIME

time_show(){
	printf "%(%l:%M:%S%p)T "
}

#-----------------------------------------------------------------DATE AND TIME

show_date_time(){
	printf "%((%d/%m/%Y) %l:%M:%S%p)T "
}

#----------------------------------------------------------STORAGE DEVICE COUNT

storage_device_count(){
	readarray X < /proc/partitions
	printf "%2d" "$((${#X[@]}-2))"
}

#--------------------------------------------------LATEST STABLE KERNEL VERSION

latest_stable_kernel(){
	# Needs version '2020-12-14' or later of GLKFU.
	local Version=`glkfu -o latest`
	local Dots=${Version//[!.]/}

	if [ ${#Dots} -gt 1 ]; then
		printf "%*s " $KernPadding  "v$Version"
	else
		printf "%*s " "$KernPadding"  "v$Version.0"
	fi
}

#----------------------------------------------PACKAGES UNABLE TO BE DOWNLOADED

official_repo_pkg_dl_status(){
	#TODO - Do away with as many instances of sed as possible.
	sed -n '/no longer be downloaded/s/^.*\s\([0-9]\+\)\spackage.*$/\1/p'\
		<<< "$(ubuntu-support-status)"
}

#---------------------------------------------PACKAGES UNSUPPORTED BY CANONICAL

official_repo_pkg_sup_status(){
	sed -n '/that \w\+ unsupported/s/^.*\s\([0-9]\+\)\spackage.*$/\1/p'\
		<<< "$(ubuntu-support-status)"
}

#----------------------------------------------NUMBER OF FILES MODIFIED IN <=1m

user_modified_files(){
	readarray X <<< "$(find $HOME/ -mmin -1 2> /dev/null)"
	printf "%2d" "${#X[@]}"
}

#------------------------------------------------------NUMBER OF OPEN TERMINALS

open_terms(){
	read -a X <<< `pidof "$TERMINAL"`
	printf "%2d" "${#X[@]}"
}

#--------------------------------------------------------------GITHUB FOLLOWERS

github_followers(){
	while read; do
		REGEX='<span class="text-bold text-gray-dark" >[0-9]+</span>'
		if [[ $REPLY =~ $REGEX ]]; then
			printf '%s\n' "${REPLY//[!0-9]/}"
			break
		fi
	done <<< "$(wget -qO - "$GH_URL")"
	unset REGEX
}

#----------------------------------------------------------GITHUB PROJECT TODOS

github_todos(){
	readarray X <<< "$(grep --exclude-dir=".git" -Erho "$GHDM" "$GHDIR")"
	printf "%'3d" "$((${#X[@]}-${GHDMO:-0}))"

}

#----------------------------------------------------------GITHUB CONTRIBUTIONS

github_contribs(){
	while read -a X; do
		if [[ "${X[0]}${X[1]}" =~ ^[0-9,]+contributions$ ]]; then
			printf "%'6d\n" "${X[0]//,}"
			break
		fi
	done <<< "$(wget -q "$GH_URL" -O -)"
}

#------------------------------------------------------------REDSHIFT(ER) VALUE

redshifter_value(){
	read < "$HOME/.config/rs-gamma"
	printf "%'6dK" "$REPLY"
}

#----------------------------------------------------------------CALL FUNCTIONS

active_i3_workspace(){
	# A little on the slow side, but seems to be down to i3.
	IFS="," read -a X <<< `i3-msg -t get_workspaces`
	for F in ${X[@]}; {
		if [[ "${F//['[{",']}" =~ ^num:[0-9]+$ ]]; then
			declare -i W=${F//[!0-9]}
		elif [[ "${F//['{"']}" =~ ^focused:true ]]; then
			printf "%3d" "$W"
			break
		fi
	}
}

#------------------------------------------------------------------------------

case "$1" in
	open_terms) open_terms ;;
	user_modified_files) user_modified_files ;;
	official_repo_pkg_sup_status) official_repo_pkg_sup_status ;;
	official_repo_pkg_dl_status) official_repo_pkg_dl_status ;;
	latest_stable_kernel) latest_stable_kernel ;;
	io_condition) io_condition ;;
	storage_device_count) storage_device_count ;;
	time_show) time_show ;;
	date_show) date_show ;;
	cpu_temp) cpu_temp ;;
	gpu_temp) gpu_temp ;;
	listening_tcp_count) listening_tcp_count ;;
	estab_tcp_count) estab_tcp_count ;;
	session_ul_total) session_ul_total ;;
	session_dl_total) session_dl_total ;;
	root_space_used_mb) root_space_used_mb ;;
	home_space_used_mb) home_space_used_mb ;;
	swap_used_mb) swap_used_mb ;;
	ram_used_mb) ram_used_mb ;;
	countdown) countdown ;;
	input_volume_pacmd) input_volume_pacmd ;;
	output_volume_pacmd) output_volume_pacmd ;;
	cpu_freq) cpu_freq ;;
	kernel_check) kernel_check ;;
	avg_cpu_usage) avg_cpu_usage ;;
	mount_count) mount_count ;;
	user_count) user_count ;;
	open_files_count) open_files_count ;;
	mocp_info) mocp_info ;;
	psa_count) psa_count ;;
	ytsubcount) ytsubcount ;;
	github_followers) github_followers ;;
	github_contribs) github_contribs ;;
	ytviewcount) ytviewcount ;;
	show_date_time) show_date_time ;;
	listening_estab_tcp_count) listening_estab_tcp_count ;;
	rough_cpu_usage) rough_cpu_usage ;;
	session_ul_dl_total) session_ul_dl_total ;;
	github_todos) github_todos ;;
	redshifter_value) redshifter_value ;;
	active_i3_workspace) active_i3_workspace ;;
esac
